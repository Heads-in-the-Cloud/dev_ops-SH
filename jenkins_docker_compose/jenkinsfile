pipeline {
    agent {
        node {
            label 'aws-ready'
        }
    }

    environment {
        ECS_CONTEXT_NAME = "aws_ecs-sh"
        ORG_ECR_URI = '${ORG_ACCOUNT_NUM}.dkr.ecr.${region}.amazonaws.com'
        SECRET_ID = 'dev/SeanH/utopia-secrets'
        COMPOSE_FILE = "jenkins_docker_compose/docker-compose.yml"
    }

    stages {
        stage("Environment Loading") {
            steps {
                echo 'Beginning environmental variables loading...'
                script {
                    withCredentials([
                        string(credentialsId: env.SECRET_ID,
                        variable: 'UtopiaCreds')
                    ]) {
                        def jsonObj = readJSON text; UtopiaCreds
                        env.SECRET_KEY = jsonObj.SECRET_KEY
                        env.USERNAME = jsonObj.DB_USERNAME
                        env.PASSWORD = jsonObj.DB_PASSWORD
                        env.RDS_INST = jsonObj.RDS_INST
                        env.DB_ACCESS_URI = "${USERNAME}:${PASSWORD}@${RDS_INST}"
                    }
                }
            }
        }

        stage("Docker-Compose Set-Up") {
            steps {
                echo 'Setting up Docker context and getting repo credentials...'
                sh 'docker context use ${ECS_CONTEXT_NAME}'
                sh 'aws ecr get-login-password --region ${region} |docker login --username AWS --password-stdin ${ORG_ECR_URI}'
            }
        }

        stage("Docker-Compose Deployment") {
            steps {
                echo 'Bringing services online...'
                sh 'docker-compose -f ${COMPOSE_FILE} up'
            }
        }

        stage("Docker-Compose Running") {
            steps {
                echo 'Printing running services...'
                sh "docker ps"
            }
        }

        stage("Docker-Compose Take Down") {
            steps {
                echo 'Bringing services down...'
                sh 'docker-compose -f ${COMPOSE_FILE} down'
                sh 'docker context use default'
            }
        }
    }
}
