pipeline {
  agent { node { label "aws-ready" } }

  environment {
    CURR_TIME = System.currentTimeMillis()
  }

  stages {
    stage("Terraform Initialization") {
      steps {
        echo "Initializing Terraform Deployment..."
        dir("project") {
          sh "terraform init"
        }
      }
    }

    stage("Terraform Validation") {
      steps {
        echo "Validating Terraform deployment config files..."
        dir("project") {
          sh "terraform validate"
        }
      }
    }

    stage("Terraform Plan") {
      steps {
        echo "Planning Terraform Deployment..."
        dir("project") {
          sh "terraform plan -json -out=terraform_plan_${CURR_TIME}.json"
        }
      }
    }

    stage("Terraform Graph") {
      steps {
        echo "Printing Terraform graph to DOT file..."
        sh "terraform graph -type=plan | neato -Tsvg -o terraform_graph_${CURR_TIME}.svg"
      }
    }
    
    stage("Terraform Deployment") {
      steps {
        echo "Bringing infrastructure online..."
        dir("project") {
          sh "terraform apply -auto-approve"
        }
      }
    }

    stage("Terraform State List") {
      steps {
        echo "Displaying current infrastructure for project..."
        dir("project") {
          sh "terraform state list"
          sh "terraform state list > terraform_state_${CURR_TIME}.txt"
        }
      }
    }

    stage("Upload Log Files to S3...") {
      steps {
        dir("project") {
          sh "aws s3 mv terraform_plan_${CURR_TIME}.json s3://utopia-terraform-sh/terraform_plans/"
          sh "aws s3 mv terraform_graph_${CURR_TIME}.svg s3://utopia-terraform-sh/terraform_graphs/"
          sh "aws s3 mv terraform_state_${CURR_TIME}.txt s3://utopia-terraform-sh/terraform_state_lists/"
        }
      }
    }
  }
}